UnaryExpressions {

    globalField : Int

    fn start(){

        var x = 1
        var y = 1

        var preIncrement = ++x
        var postIncrement = y++

        var result = preIncrement == x
        assert(expected -> true , actual -> result)

        var result = postIncrement < y
        assert(expected -> true , actual -> result)

        globalField = 1

        var incSuffix = globalField++
        var result = incSuffix < globalField
        assert(expected -> true , actual -> result)

        globalField = 1
        var incPrefix = ++globalField
        var result2 = incPrefix == globalField
        assert(expected -> true , actual -> result2)

    }

    fn assert(Boolean actual,Boolean expected) {
        if (actual == expected) {
            print "OK"
        }
        else {
            print "TEST FAILED"
        }
      }
}